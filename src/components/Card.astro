---
import { getAllPromotions } from "../lib/api";
import { urlForImage } from "../lib/urlForImage";
const { href, title, body, image } = Astro.props;
const promotion = await getAllPromotions();
import arrow from "../images/arrowRight.svg";
import { Image } from "astro:assets";
const accentLight = "rgba(255, 255, 255, 0.3)";
const accentGradient = "rgb(255, 255, 255)";
---

<script type="module">
  ScrollReveal().reveal(".link-card", { delay: 300 });
</script>

<ul class="card-container">
  {
    promotion.map((promotion) => (
      <li class="link-card">
        <Image
          src={urlForImage(promotion.mainImage).url()}
          alt="home-project-image"
          width={500}
          height={300}
          format="webp"
          quality={100}
          class="card-img"
        />

        <a href='/gallery/' class="card-link">
          {promotion.title}

          <svg
          class='arrow-right'
            width="161"
            height="10"
            viewBox="0 0 161 10"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1 1H160C158.167 1.16667 154.3 2.9 153.5 8.5"
              stroke="white"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        </a>
      </li>
    ))
  }
</ul>

<style define:vars={{ accentGradient, accentLight }}>
  .card-container {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;
    padding: 0;
    list-style: none;
  }

  @media screen and (max-width: 1250px) {
    .card-container{
      flex-flow: column;
      justify-items: center;
      align-content: center;
    }
  }


  .link-card {
    list-style: none;
    display: flex;
    flex-flow: column;
    margin: 2rem;
    min-width: 25rem;
    height: auto;
    padding: 1rem;
    background-color: #23262d;
    background-image: none;
    background-size: 150%;
    border-radius: 27px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }

  @media screen and (max-width: 500px) {
    .link-card {
      min-width: 10rem;
    }
  }
  .card-link {
    display: flex;
    flex-flow: column;
    gap: 1rem;
  }

  .arrow-right {
    color: white;
    text-decoration: none;
  }

  .card-img {
    width: 100%;
    height: 25rem;
    object-fit: cover;
  }
  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: white;
    background-color: #23262d;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accentGradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accentLight));
  }

  /* large-monitor and desktop */
  @media screen and (min-wdith: 12000px) {
  }

  /* //large tablet and desktop */
  @media screen and (min-width: 1600px) {
    .card-container {
      flex-flow: row;
    }
  }

  /* mobile  */
  @media screen and (max-width: 400px) {
  }
</style>
